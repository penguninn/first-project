/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.daipc.form;

import com.daipc.model.KhachHang;
import com.daipc.repo.KhachHangRepo;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DaiPc
 */
public class Form_Customer extends javax.swing.JPanel {
    /**
     * Creates new form Form_Customer
     */
    private List<KhachHang> listKH = new ArrayList<>();
    private DefaultTableModel modelKH;
    private DefaultTableModel modelKHan;
    
    
    KhachHangRepo khachHangRepo = new KhachHangRepo();
    public Form_Customer() {
        initComponents();
        loadKhachHangToTable();
        loadMaKH();
        loadKhachHangAn();
    }
    private void loadMaKH(){
        String maKhachHang = khachHangRepo.generateMaKhachHang();
        // Hiển thị mã khách hàng mới trong trường mã khách hàng và khóa nó
        txtMaKhachhang.setEditable(false); // Khóa trường mã khách hàng
        txtMaKhachhang.setText(maKhachHang);
    }
    private void loadKhachHangToTable() {
        listKH = khachHangRepo.getAllKhachHang(); 
        modelKH = new DefaultTableModel(
            new Object[][] {},
            new String[] {
                "ID", "Mã Khách Hàng", "Họ Tên", "Giới Tính", "Số Điện Thoại", "Địa Chỉ", "Ngày Tạo", "Trạng Thái"
            }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // Không cho phép chỉnh sửa bất kỳ ô nào
                return false;
            }
        };
        tblkhachHang1.setModel(modelKH);
        for (KhachHang kh : listKH) {
            if(kh.getTrangThai()){
                modelKH.addRow(new Object[]{
                kh.getId(),
                kh.getMaKhachHang(),
                kh.getHoTen(),
                kh.isGioiTinh() ? "Nam" : "Nữ",
                kh.getSoDT(),
                kh.getDiaChi(),
                kh.getNgayTao(),
                kh.getTrangThai() ? " Còn hoạt động" : "Ngưng hoạt động"
            });
            }
            
        }
        if (tblkhachHang1.getColumnModel().getColumnCount() > 0) {
        tblkhachHang1.getColumnModel().getColumn(0).setMinWidth(0);
        tblkhachHang1.getColumnModel().getColumn(0).setMaxWidth(0);
        tblkhachHang1.getColumnModel().getColumn(0).setWidth(0);
        tblkhachHang1.getColumnModel().getColumn(0).setPreferredWidth(0);
        }
    }
    
    private void loadKhachHangAn(){
        listKH = khachHangRepo.getAllKhachHang(); 
        modelKHan = new DefaultTableModel(
            new Object[][] {},
            new String[] {
                "ID", "Mã Khách Hàng", "Họ Tên", "Giới Tính", "Số Điện Thoại", "Địa Chỉ", "Ngày Tạo", "Trạng Thái"
            }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // Không cho phép chỉnh sửa bất kỳ ô nào
                return false;
            }
        };
        tblAn.setModel(modelKHan);
        for (KhachHang kh : listKH) {
            if(!kh.getTrangThai()){
                modelKHan.addRow(new Object[]{
                kh.getId(),
                kh.getMaKhachHang(),
                kh.getHoTen(),
                kh.isGioiTinh() ? "Nam" : "Nữ",
                kh.getSoDT(),
                kh.getDiaChi(),
                kh.getNgayTao(),
                kh.getTrangThai() ? " Còn hoạt động" : "Ngưng hoạt động"
            });
            }
            
        }
        if (tblAn.getColumnModel().getColumnCount() > 0) {
        tblAn.getColumnModel().getColumn(0).setMinWidth(0);
        tblAn.getColumnModel().getColumn(0).setMaxWidth(0);
        tblAn.getColumnModel().getColumn(0).setWidth(0);
        tblAn.getColumnModel().getColumn(0).setPreferredWidth(0);
        }
    }


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialogAn = new javax.swing.JDialog();
        panelBorder3 = new com.daipc.swing.PanelBorder();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblAn = new javax.swing.JTable();
        button1 = new com.daipc.swing.Button();
        panelBorder1 = new com.daipc.swing.PanelBorder();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaKhachhang = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenKhachHang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rdoNam = new com.daipc.radiobutton.RadioButtonCustom();
        rdoNu = new com.daipc.radiobutton.RadioButtonCustom();
        jLabel5 = new javax.swing.JLabel();
        txtSdt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiaChi = new javax.swing.JTextArea();
        btnThem = new com.daipc.swing.Button();
        tbnSua = new com.daipc.swing.Button();
        btnXoa = new com.daipc.swing.Button();
        btnClear = new com.daipc.swing.Button();
        btlKHNgung = new com.daipc.swing.Button();
        panelBorder2 = new com.daipc.swing.PanelBorder();
        txtTimKiem = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblkhachHang1 = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();

        panelBorder3.setBackground(new java.awt.Color(255, 255, 255));

        tblAn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tblAn);

        button1.setText("Hoạt động lại");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder3Layout = new javax.swing.GroupLayout(panelBorder3);
        panelBorder3.setLayout(panelBorder3Layout);
        panelBorder3Layout.setHorizontalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelBorder3Layout.setVerticalGroup(
            panelBorder3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialogAnLayout = new javax.swing.GroupLayout(jDialogAn.getContentPane());
        jDialogAn.getContentPane().setLayout(jDialogAnLayout);
        jDialogAnLayout.setHorizontalGroup(
            jDialogAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDialogAnLayout.setVerticalGroup(
            jDialogAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Thiết lập thông tin khách hàng");

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Mã khách hàng");

        txtMaKhachhang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaKhachhangActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Tên khách hàng");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Giới tính");

        buttonGroup1.add(rdoNam);
        rdoNam.setText("Nam");
        rdoNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNamActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");
        rdoNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNuActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Số điện thoại");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("Địa chỉ");

        txtDiaChi.setColumns(20);
        txtDiaChi.setRows(5);
        jScrollPane1.setViewportView(txtDiaChi);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        tbnSua.setText("Sửa");
        tbnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Ngưng hoạt động");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnClear.setText("Làm Mới");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btlKHNgung.setText("Khách hàng ngưng hoạt động");
        btlKHNgung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlKHNgungActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaKhachhang))
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelBorder1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)))
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenKhachHang)
                            .addGroup(panelBorder1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(tbnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 18, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelBorder1Layout.createSequentialGroup()
                                .addComponent(rdoNam, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdoNu, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtSdt))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btlKHNgung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelBorder1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addGap(24, 24, 24)
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMaKhachhang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(rdoNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdoNu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(42, 42, 42)
                        .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btlKHNgung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tbnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        panelBorder2.setBackground(new java.awt.Color(255, 255, 255));

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setText("Tìm kiếm");

        tblkhachHang1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Mã Khách Hàng", "Họ Tên", "Giới Tính", "Số Điện Thoại", "Địa Chỉ", "Ngày Tạo", "Trạng Thái"
            }
        ));
        tblkhachHang1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblkhachHang1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblkhachHang1);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Thông tin khách hàng");

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5))
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBorder2Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelBorder2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel10)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder2Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaKhachhangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaKhachhangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaKhachhangActionPerformed

    private void rdoNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNamActionPerformed
       
    }//GEN-LAST:event_rdoNamActionPerformed

    private void rdoNuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoNuActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
  
        String maKhachHang = txtMaKhachhang.getText();
        String hoTen = txtTenKhachHang.getText();
        boolean gioiTinh = rdoNam.isSelected();
        String soDT = txtSdt.getText();
        String diaChi = txtDiaChi.getText();
        String ngayTao = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
        boolean trangThai = true;

         if (hoTen.isEmpty() || soDT.isEmpty() || diaChi.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
        }

        // Kiểm tra số điện thoại chỉ chứa chữ số
        if (!soDT.matches("\\d+")) { 
            JOptionPane.showMessageDialog(this, "Số điện thoại phải là số.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra định dạng số điện thoại (ví dụ: có đủ 10 chữ số)
        if (soDT.length() != 10) { 
            JOptionPane.showMessageDialog(this, "Số điện thoại phải có 10 chữ số.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        KhachHang kh = new KhachHang(0, maKhachHang, hoTen, gioiTinh, soDT, diaChi, ngayTao, trangThai);
        khachHangRepo.addKhachHang(kh);

        loadKhachHangToTable();
        JOptionPane.showMessageDialog(this, "Thêm khách hàng thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

        // Làm trống các trường khác và khôi phục khả năng chỉnh sửa cho trường mã khách hàng
        String manew= khachHangRepo.generateMaKhachHang(); 
        txtMaKhachhang.setEditable(false); 
        txtMaKhachhang.setText(manew);
        txtTenKhachHang.setText("");
        txtSdt.setText("");
        txtDiaChi.setText("");
        rdoNam.setSelected(true);
    }//GEN-LAST:event_btnThemActionPerformed

    private void tbnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnSuaActionPerformed
        int row = tblkhachHang1.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng cần sửa.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        KhachHang kh = khachHangRepo.getAllKhachHang().get(row);

        String maKhachHang = txtMaKhachhang.getText();
        String hoTen = txtTenKhachHang.getText();
        boolean gioiTinh = rdoNam.isSelected();
        String soDT = txtSdt.getText();
        String diaChi = txtDiaChi.getText();

        String ngayTao = kh.getNgayTao(); 
        boolean trangThai = kh.getTrangThai();

        // Kiểm tra dữ liệu đầu vào
        if (hoTen.isEmpty() || soDT.isEmpty() || diaChi.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra số điện thoại chỉ chứa số
        if (!soDT.matches("\\d+")) { // Biểu thức chính quy để kiểm tra chỉ số
            JOptionPane.showMessageDialog(this, "Số điện thoại phải là số.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!soDT.matches("\\d{10}")) { // Ví dụ: kiểm tra số điện thoại có 10 chữ số
        JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
         }

        // Kiểm tra mã khách hàng có hợp lệ không (nếu cần)
        if (maKhachHang.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã khách hàng không được để trống.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Cập nhật thông tin khách hàng
        kh.setMaKhachHang(maKhachHang);
        kh.setHoTen(hoTen);
        kh.setGioiTinh(gioiTinh);
        kh.setSoDT(soDT);
        kh.setDiaChi(diaChi);

        khachHangRepo.updateKhachHang(kh);

        // Cập nhật lại bảng
        loadKhachHangToTable();

        JOptionPane.showMessageDialog(this, "Cập nhật khách hàng thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

        // Làm trống các trường đầu vào
        String maKhachHangNew = khachHangRepo.generateMaKhachHang();
        txtMaKhachhang.setText(maKhachHangNew);
        txtTenKhachHang.setText("");
        txtSdt.setText("");
        txtDiaChi.setText("");
        rdoNam.setSelected(true);
    }//GEN-LAST:event_tbnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int selectedRow = tblkhachHang1.getSelectedRow();
        if (selectedRow != -1) {
            String maKhachHang = tblkhachHang1.getValueAt(selectedRow, 1).toString();

            khachHangRepo.updateTrangThai(maKhachHang, "0");
        }
        loadKhachHangToTable();
        loadKhachHangAn();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        String maKhachHangNew = khachHangRepo.generateMaKhachHang();
        txtMaKhachhang.setText(maKhachHangNew);
        txtTenKhachHang.setText("");
        txtSdt.setText("");
        txtDiaChi.setText("");
        rdoNam.setSelected(true);
        tblkhachHang1.clearSelection(); 
    }//GEN-LAST:event_btnClearActionPerformed

    private void btlKHNgungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlKHNgungActionPerformed
        jDialogAn.setVisible(true);
        jDialogAn.setSize(900,350);
        jDialogAn.setLocationRelativeTo(null);
    }//GEN-LAST:event_btlKHNgungActionPerformed

    private void tblkhachHang1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblkhachHang1MouseClicked
        int row = tblkhachHang1.getSelectedRow();
        if (row == -1) {
            return;
        }
        KhachHang kh = khachHangRepo.getAllKhachHang().get(row);
        txtMaKhachhang.setText(kh.getMaKhachHang());
        txtTenKhachHang.setText(kh.getHoTen());
        if (kh.isGioiTinh()) {
            this.rdoNam.setSelected(true);
        } else {
            this.rdoNu.setSelected(true);
        }
        txtSdt.setText(kh.getSoDT());
        txtDiaChi.setText(kh.getDiaChi());
    }//GEN-LAST:event_tblkhachHang1MouseClicked

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
       int selectedRow = tblAn.getSelectedRow();
        if (selectedRow != -1) {
            String maKhachHang = tblAn.getValueAt(selectedRow, 1).toString();

            khachHangRepo.updateTrangThai(maKhachHang, "1");
        }
        loadKhachHangToTable();
        loadKhachHangAn();
    }//GEN-LAST:event_button1ActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        String soDT = txtTimKiem.getText();
        List<KhachHang> tim = khachHangRepo.findKhachHangBySoDT(soDT);
        DefaultTableModel model = (DefaultTableModel) tblkhachHang1.getModel();
        model.setRowCount(0);
        for (KhachHang kh : tim) {
            if(kh.getTrangThai()){
                model.addRow(new Object[]{
                    kh.getId(),
                    kh.getMaKhachHang(),
                    kh.getHoTen(),
                    kh.isGioiTinh() ? "Nam" : "Nữ",
                    kh.getSoDT(),
                    kh.getDiaChi(),
                    kh.getNgayTao(),
                    kh.getTrangThai() ? " Còn hoạt động" : "Ngưng hoạt động"
            });
            }
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.daipc.swing.Button btlKHNgung;
    private com.daipc.swing.Button btnClear;
    private com.daipc.swing.Button btnThem;
    private com.daipc.swing.Button btnXoa;
    private com.daipc.swing.Button button1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JDialog jDialogAn;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private com.daipc.swing.PanelBorder panelBorder1;
    private com.daipc.swing.PanelBorder panelBorder2;
    private com.daipc.swing.PanelBorder panelBorder3;
    private com.daipc.radiobutton.RadioButtonCustom rdoNam;
    private com.daipc.radiobutton.RadioButtonCustom rdoNu;
    private javax.swing.JTable tblAn;
    private javax.swing.JTable tblkhachHang1;
    private com.daipc.swing.Button tbnSua;
    private javax.swing.JTextArea txtDiaChi;
    private javax.swing.JTextField txtMaKhachhang;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtTenKhachHang;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
